{"version":3,"sources":["components/Form/Form.styled.jsx","components/Form/Form.jsx","components/List/List.styled.jsx","components/List/Contact.jsx","components/List/List.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","App.styled.jsx","App.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","onChange","type","pattern","title","required","Component","List","ul","Item","li","Contact","id","onClick","ContactsList","contacts","onDeleteContact","map","contact","Filter","FirstTitle","h1","SecondTitle","h2","App","contactsListDefault","useState","filter","setFilter","JSON","parse","window","localStorage","getItem","setContacts","useEffect","setItem","stringify","filteredContacts","normalizedFilter","toLowerCase","includes","visibleContacts","newContact","uuidv4","some","alert","prevState","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e796f5f3.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: block;\n  margin-left: 22px;\n`;\n\nexport const Label = styled.label`\n  font-size: 15px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 222px;\n  height: 30px;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 56px;\n  margin-top: 10px;\n  width: 110px;\n  height: 37px;\n  color: white;\n  background-color: navy;\n  border-style: none;\n  border-radius: 4px;\n`;\n","import { Component } from 'react';\nimport { Form, Label, Input, Button } from './Form.styled';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { handleSubmit, handleChange } = this;\n    const { name, number } = this.state;\n\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов.\n                Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <Input\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы,\n                тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </Label>\n\n        <div>\n          <Button type=\"submit\">Add contact</Button>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  padding-left: 22px;\n`;\n\nexport const Item = styled.li`\n  background-color: whitesmoke;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 344px;\n  margin-bottom: 8px;\n`;\n\nexport const Button = styled.button`\n  width: 88px;\n  height: 30px;\n  color: white;\n  background-color: navy;\n  border-style: none;\n  border-radius: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Button } from './List.styled';\n\nexport const Contact = ({ id, name, number, onClick }) => {\n  return (\n    <Item key={id}>\n      <span>\n        {name}: {number}\n      </span>\n      <Button type=\"button\" onClick={onClick}>\n        Delete\n      </Button>\n    </Item>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\n// export default Contact\n","import PropTypes from 'prop-types';\nimport { Contact } from './Contact';\nimport { List } from './List.styled';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Contact\n          name={contact.name}\n          number={contact.number}\n          onClick={() => onDeleteContact(contact.id)}\n        />\n      ))}\n    </List>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  margin-left: 22px;\n  font-weight: 500;\n`;\n","import { Label } from './Filter.styled';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      <p> Find contact by name</p>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const FirstTitle = styled.h1`\n  margin-left: 110px;\n`;\n\nexport const SecondTitle = styled.h2`\n  margin-top: 40px;\n  margin-left: 144px;\n`;\n","import { useState, useEffect } from 'react';\nimport Form from './components/Form/Form';\nimport ContactsList from './components/List/List';\nimport Filter from './components/Filter/Filter';\nimport { FirstTitle, SecondTitle } from './App.styled';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst App = () => {\n  const contactsListDefault = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ];\n\n  const [filter, setFilter] = useState('');\n  const [contacts, setContacts] = useState(() => {\n    return (\n      JSON.parse(window.localStorage.getItem('contacts')) ?? contactsListDefault\n    );\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    contacts.some(contact => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : setContacts(prevState => [newContact, ...prevState]);\n  };\n\n  const tryFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const visibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const filteredContacts = visibleContacts();\n\n  const deleteContact = contactId => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  return (\n    <div>\n      <FirstTitle>Phonebook</FirstTitle>\n      <Form onSubmit={addContact} />\n      <SecondTitle>Contacts</SecondTitle>\n      <Filter value={filter} onChange={tryFilter} />\n      <ContactsList\n        contacts={filteredContacts}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}